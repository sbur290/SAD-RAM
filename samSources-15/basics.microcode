//File \svn\sam\ver-15\sadram\sadram.sim\sim_1\behav\xsim\basics.microcode created 19/03/2023@16:29.
//op //pc  label     : interpretation    line# and source. Source file=basics.sam
0001 //000 jmpTable   : OP_GO_L start @(2)                                           line 10  goto(long)start;
0002 //001            : DW 0x0002 (address of start)                                 line 10  

E018 //002 start      : $bug break                                                   line 14  $bug;

0516 //003            : OP_CROWI=5                                                   line 15  $curRow = 5;

0016 //004            : OP_CROWI=0                                                   line 16  $curRow = 0;

002A //005            : OP_CFG(cell)                                                 line 17  cfg(cell);

008A //006            : OP_CFG(group)                                                line 18  cfg(group);

011E //007            : OP_PRINT "---- Test Literals ----\n"                         line 20  print "---- Test Literals ----\n" ;

0006 //008            : $0 = 0x0                                                     line 21  [0] = 0x0;
000C //009            : OP_WRYT[0], $0                                               line 21  

1106 //010            : $0 = 0x11                                                    line 22  [1] = 0x11;
010C //011            : OP_WRYT[1], $0                                               line 22  

0006 //012            : $0 = 0x0                                                     line 23  [2] = 0x222;
088B //013            : OP_LDI $0 0x0222                                             line 23  
020C //014            : OP_WRYT[2], $0                                               line 23  

0006 //015            : $0 = 0x0                                                     line 24  [3] = 0x3333;
CCCF //016            : OP_LDI $0 0x3333                                             line 24  
030C //017            : OP_WRYT[3], $0                                               line 24  

1106 //018            : $0 = 0x11                                                    line 25  [4] = 0x44444;
1113 //019            : OP_LDI $0 0x0444                                             line 25  
040C //020            : OP_WRYT[4], $0                                               line 25  

0006 //021            : $0 = 0x0                                                     line 26  [5] = 0x555555;
0557 //022            : OP_LDI $0 0x0155                                             line 26  
5557 //023            : OP_LDI $0 0x1555                                             line 26  
050C //024            : OP_WRYT[5], $0                                               line 26  

0006 //025            : $0 = 0x0                                                     line 27  [6] = 0x6666666;
6667 //026            : OP_LDI $0 0x1999                                             line 27  
999B //027            : OP_LDI $0 0x2666                                             line 27  
060C //028            : OP_WRYT[6], $0                                               line 27  

0706 //029            : $0 = 0x7                                                     line 28  [7] = 0x77777777;
7777 //030            : OP_LDI $0 0x1DDD                                             line 28  
DDDF //031            : OP_LDI $0 0x3777                                             line 28  
070C //032            : OP_WRYT[7], $0                                               line 28  

8806 //033            : $0 = 0x88                                                    line 29  [8] = 0x888888888;
888B //034            : OP_LDI $0 0x2222                                             line 29  
2223 //035            : OP_LDI $0 0x0888                                             line 29  
080C //036            : OP_WRYT[8], $0                                               line 29  

0006 //037            : $0 = 0x0                                                     line 30  [9] = 0x9999999999;
2667 //038            : OP_LDI $0 0x0999                                             line 30  
999B //039            : OP_LDI $0 0x2666                                             line 30  
6667 //040            : OP_LDI $0 0x1999                                             line 30  
090C //041            : OP_WRYT[9], $0                                               line 30  

0206 //042            : $0 = 0x2                                                     line 31  [10]= 0xAAAAAAAAAAA;
AAAB //043            : OP_LDI $0 0x2AAA                                             line 31  
AAAB //044            : OP_LDI $0 0x2AAA                                             line 31  
AAAB //045            : OP_LDI $0 0x2AAA                                             line 31  
0A0C //046            : OP_WRYT[10], $0                                              line 31  

2E06 //047            : $0 = 0x2E                                                    line 32  [11]= 0xBBBBBBBBBBBB;
EEEF //048            : OP_LDI $0 0x3BBB                                             line 32  
BBBB //049            : OP_LDI $0 0x2EEE                                             line 32  
EEEF //050            : OP_LDI $0 0x3BBB                                             line 32  
0B0C //051            : OP_WRYT[11], $0                                              line 32  

0006 //052            : $0 = 0x0                                                     line 33  [12]= 0xCCCCCCCCCCCCC;
0CCF //053            : OP_LDI $0 0x0333                                             line 33  
3333 //054            : OP_LDI $0 0x0CCC                                             line 33  
CCCF //055            : OP_LDI $0 0x3333                                             line 33  
3333 //056            : OP_LDI $0 0x0CCC                                             line 33  
0C0C //057            : OP_WRYT[12], $0                                              line 33  

0006 //058            : $0 = 0x0                                                     line 34  [13]= 0xDDDDDDDDDDDDDD;
DDDF //059            : OP_LDI $0 0x3777                                             line 34  
7777 //060            : OP_LDI $0 0x1DDD                                             line 34  
DDDF //061            : OP_LDI $0 0x3777                                             line 34  
7777 //062            : OP_LDI $0 0x1DDD                                             line 34  
0D0C //063            : OP_WRYT[13], $0                                              line 34  

0E06 //064            : $0 = 0xE                                                     line 35  [14]= 0xEEEEEEEEEEEEEEE;
EEEF //065            : OP_LDI $0 0x3BBB                                             line 35  
BBBB //066            : OP_LDI $0 0x2EEE                                             line 35  
EEEF //067            : OP_LDI $0 0x3BBB                                             line 35  
BBBB //068            : OP_LDI $0 0x2EEE                                             line 35  
0E0C //069            : OP_WRYT[14], $0                                              line 35  

FF06 //070            : $0 = 0xFF                                                    line 36  [15]= 0xFFFFFFFFFFFFFFFF;
0312 //071            : OP_REPEAT 4                                                  line 36  
FFFF //072            : OP_LDI $0 0x3FFF                                             line 36  
0F0C //073            : OP_WRYT[15], $0                                              line 36  

4018 //074            : $BUG_RAW                                                     line 37  $BUG_RAW;

1916 //075            : OP_CROWI=25                                                  line 39  $curRow = 25;

0A00 //076            : CALL wr@(80)                                                 line 40  call wr;

021E //077            : OP_PRINT "Exit from basic tests.\n"                          line 41  print "Exit from basic tests.\n" ;

0018 //078            : OP_STOP                                                      line 42  stop;

FF01 //079 lup        : OP_GO_T lup @(79)                                            line 43  lup:goto lup;

0106 //080 wr         : $0 = 0x1                                                     line 44  wr: $0         = 0x12345678;
2347 //081            : OP_LDI $0 0x08D1                                             line 44  
59E3 //082            : OP_LDI $0 0x1678                                             line 44  

031E //083            : OP_PRINT "\n---- Random operators ----\n"                    line 45  print "\n---- Random operators ----\n"  ;

E0A6 //084            : $5 = 0xE0                                                    line 46  $5         = 0xE0;

ABA2 //085            : OP_DEC $5                                                    line 47  dec $5; $4 = 0x123;
9102 //086            : OP_XCHG $0,$4                                                line 47  
0006 //087            : $0 = 0x0                                                     line 47  
048F //088            : OP_LDI $0 0x0123                                             line 47  
9102 //089            : OP_XCHG $0,$4                                                line 47  

87A2 //090            : $4 = $4 AND $5                                               line 48  and $4,$5;

1402 //091            : OP_PUSH $0                                                   line 49  and $4, 5;
0506 //092            : $0 = 0x5                                                     line 49  
8702 //093            : $4 = $4 AND $0                                               line 49  
1302 //094            : OP_POP $0                                                    line 49  

043E //095            : OP_EXPECT "12345678,0x1,0xdf\n"                              line 50  $expect "12345678,0x1,0xdf"; $actual "$0,0x$4,0x$5";
055E //096            : OP_ACTUAL "$0,0x$4,0x$5\n"                                   line 50  

000C //097            : OP_WRYT[0], $0                                               line 51  [0]     = $0;

190C //098            : OP_WRYT[25], $0                                              line 52  [25]    = $0;

C612 //099            : OP_REPEAT 7, reg++, adr++                                    line 53  [25:31] = $0;

1916 //100            : OP_CROWI=25                                                  line 54  [25@1:31]= 0;
0006 //101            : $0 = 0x0                                                     line 54  
5E12 //102            : OP_REPEAT 31, adr++                                          line 54  

8706 //103            : $0 = 0x87                                                    line 55  [9:10]  = 0x8765432112345678;
6543 //104            : OP_LDI $0 0x1950                                             line 55  
C847 //105            : OP_LDI $0 0x3211                                             line 55  
2347 //106            : OP_LDI $0 0x08D1                                             line 55  
59E3 //107            : OP_LDI $0 0x1678                                             line 55  
4112 //108            : OP_REPEAT 2, adr++                                           line 55  

03A6 //109            : $5 = 0x3                                                     line 56  $5      = 3*(2**4-15);

061E //110            : OP_PRINT "3*(2**4-15) = 0x$5\n"                              line 57  print "3*(2**4-15) = 0x$5\n" ;

C112 //111            : OP_REPEAT 2, reg++, adr++                                    line 58  [30:31] = $5;

1904 //112            : OP_READ $0,[25]                                              line 59  $0 = [25];

4612 //113            : OP_REPEAT 7, adr++                                           line 60  $0 = [25:31];

4412 //114            : OP_REPEAT 5, adr++                                           line 61  $3 = [25@27:31];

4018 //115            : $BUG_RAW                                                     line 62  $bug_raw;

0005 //116            : NOOP                                                         line 63  NOOP; NOOP; NOOP;
0005 //117            : NOOP                                                         line 63  
0005 //118            : NOOP                                                         line 63  

071E //119            : OP_PRINT "\n---- Basic Arithmetic Tests ----\n"              line 64  print "\n---- Basic Arithmetic Tests ----\n"  ;

0006 //120            : $0 = 0x0                                                     line 65  $0:$4 = 500; $7:$6 = $5; $expect "$5,$5";$actual "$6,$7";
07D3 //121            : OP_LDI $0 0x01F4                                             line 65  
8312 //122            : OP_REPEAT 4, reg++                                           line 65  
1022 //123            : $1 = $0                                                      line 65  
B0E2 //124            : $7 = $5                                                      line 65  
F0C2 //125            : $6 = $7                                                      line 65  
083E //126            : OP_EXPECT "$5,$5\n"                                          line 65  
095E //127            : OP_ACTUAL "$6,$7\n"                                          line 65  

00E6 //128            : $7 = 0x0                                                     line 66  $7:$0 = 0;
A612 //129            : OP_REPEAT 7, reg--                                           line 66  
F0C2 //130            : $6 = $7                                                      line 66  

7102 //131            : OP_XCHG $0,$3                                                line 67  $3  = 0x14D; $expect "0,0,0,14D,0,0,0,0";$actual "$0,$1,$2,$3,$4
0006 //132            : $0 = 0x0                                                     line 67  
0537 //133            : OP_LDI $0 0x014D                                             line 67  
7102 //134            : OP_XCHG $0,$3                                                line 67  
0A3E //135            : OP_EXPECT "0,0,0,14D,0,0,0,0\n"                              line 67  
0B5E //136            : OP_ACTUAL "$0,$1,$2,$3,$4,$5,$6,$7\n"                        line 67  

3102 //137            : OP_XCHG $0,$1                                                line 68  $1  = 495;   $expect "1EF";              $actual "$1";
0006 //138            : $0 = 0x0                                                     line 68  
07BF //139            : OP_LDI $0 0x01EF                                             line 68  
3102 //140            : OP_XCHG $0,$1                                                line 68  
0C3E //141            : OP_EXPECT "1EF\n"                                            line 68  
0D5E //142            : OP_ACTUAL "$1\n"                                             line 68  

0A02 //143            : OP_INC $0                                                    line 69  $0++;        $expect "1";                $actual "$0";
0E3E //144            : OP_EXPECT "1\n"                                              line 69  
0F5E //145            : OP_ACTUAL "$0\n"                                             line 69  

2A22 //146            : OP_INC $1                                                    line 70  $1++;        $expect "1F0";              $actual "$1";
103E //147            : OP_EXPECT "1F0\n"                                            line 70  
0D5E //148            : OP_ACTUAL "$1\n"                                             line 70  

1402 //149            : OP_PUSH $0                                                   line 71  $1 &= 255;   $expect "F0";               $actual "$1";
FF06 //150            : $0 = 0xFF                                                    line 71  
2702 //151            : $1 = $1 AND $0                                               line 71  
1302 //152            : OP_POP $0                                                    line 71  
113E //153            : OP_EXPECT "F0\n"                                             line 71  
0D5E //154            : OP_ACTUAL "$1\n"                                             line 71  

1422 //155            : OP_PUSH $1                                                   line 72  $0 |= 0x80;  $expect "81";               $actual "$0";
8026 //156            : $1 = 0x80                                                    line 72  
0622 //157            : $0 = $0 OR $1                                                line 72  
1322 //158            : OP_POP $1                                                    line 72  
123E //159            : OP_EXPECT "81\n"                                             line 72  
0F5E //160            : OP_ACTUAL "$0\n"                                             line 72  

1422 //161            : OP_PUSH $1                                                   line 73  $0 |= 0x140; $expect "1C1, F0";          $actual "$0, $1";
1022 //162            : $1 = $0                                                      line 73  
0006 //163            : $0 = 0x0                                                     line 73  
0503 //164            : OP_LDI $0 0x0140                                             line 73  
0622 //165            : $0 = $0 OR $1                                                line 73  
1322 //166            : OP_POP $1                                                    line 73  
133E //167            : OP_EXPECT "1C1, F0\n"                                        line 73  
145E //168            : OP_ACTUAL "$0, $1\n"                                         line 73  

1402 //169            : OP_PUSH $0                                                   line 74  $1 |= 0x130; $expect "1C1, 1F0";         $actual "$0, $1";
0006 //170            : $0 = 0x0                                                     line 74  
04C3 //171            : OP_LDI $0 0x0130                                             line 74  
2602 //172            : $1 = $1 OR $0                                                line 74  
1302 //173            : OP_POP $0                                                    line 74  
153E //174            : OP_EXPECT "1C1, 1F0\n"                                       line 74  
145E //175            : OP_ACTUAL "$0, $1\n"                                         line 74  

1402 //176            : OP_PUSH $0                                                   line 75  $3 ^= 0x55;  $expect "1C1, 118";         $actual "$0, $3";
5506 //177            : $0 = 0x55                                                    line 75  
6502 //178            : $3 = $3 XOR $0                                               line 75  
1302 //179            : OP_POP $0                                                    line 75  
163E //180            : OP_EXPECT "1C1, 118\n"                                       line 75  
175E //181            : OP_ACTUAL "$0, $3\n"                                         line 75  

2A22 //182            : OP_INC $1                                                    line 76  $1 +=1;      $expect "1F1";              $actual "$1";
183E //183            : OP_EXPECT "1F1\n"                                            line 76  
0D5E //184            : OP_ACTUAL "$1\n"                                             line 76  

2B22 //185            : OP_DEC $1                                                    line 77  $1 -=2;      $expect "1EF";              $actual "$1";
2B22 //186            : OP_DEC $1                                                    line 77  
0C3E //187            : OP_EXPECT "1EF\n"                                            line 77  
0D5E //188            : OP_ACTUAL "$1\n"                                             line 77  

0312 //189            : OP_REPEAT 4                                                  line 78  $1 +=4;      $expect "1F3";              $actual "$1";
2A22 //190            : OP_INC $1                                                    line 78  
193E //191            : OP_EXPECT "1F3\n"                                            line 78  
0D5E //192            : OP_ACTUAL "$1\n"                                             line 78  

1402 //193            : OP_PUSH $0                                                   line 79  $1 += 17;    $expect "204";              $actual "$1";
1106 //194            : $0 = 0x11                                                    line 79  
2002 //195            : $1 = $1 ADD $0                                               line 79  
1302 //196            : OP_POP $0                                                    line 79  
1A3E //197            : OP_EXPECT "204\n"                                            line 79  
0D5E //198            : OP_ACTUAL "$1\n"                                             line 79  

1402 //199            : OP_PUSH $0                                                   line 80  $1 -= 17;    $expect "1F3";              $actual "$1";
1106 //200            : $0 = 0x11                                                    line 80  
0822 //201            : $0 = $0 SUBX $1                                              line 80  
1022 //202            : $1 = $0                                                      line 80  
1302 //203            : OP_POP $0                                                    line 80  
193E //204            : OP_EXPECT "1F3\n"                                            line 80  
0D5E //205            : OP_ACTUAL "$1\n"                                             line 80  

1B3E //206            : OP_EXPECT "1C1,1F3,0,118,0,0,0,0\n"                          line 81  $expect "1C1,1F3,0,118,0,0,0,0";         $actual "$0,$1,$2,$3,$4
0B5E //207            : OP_ACTUAL "$0,$1,$2,$3,$4,$5,$6,$7\n"                        line 81  

0A02 //208            : OP_INC $0                                                    line 82  $0+=1;

0B02 //209            : OP_DEC $0                                                    line 83  $0-=2;
0B02 //210            : OP_DEC $0                                                    line 83  

0312 //211            : OP_REPEAT 4                                                  line 84  $0+=4;
0A02 //212            : OP_INC $0                                                    line 84  

3422 //213            : OP_PUSH $1                                                   line 85  $0+=17;
1022 //214            : $1 = $0                                                      line 85  
1106 //215            : $0 = 0x11                                                    line 85  
0022 //216            : $0 = $0 ADD $1                                               line 85  
1322 //217            : OP_POP $1                                                    line 85  

3422 //218            : OP_PUSH $1                                                   line 86  $0-=17;
1022 //219            : $1 = $0                                                      line 86  
1106 //220            : $0 = 0x11                                                    line 86  
0822 //221            : $0 = $0 SUBX $1                                              line 86  
1322 //222            : OP_POP $1                                                    line 86  

1C1E //223            : OP_PRINT "\n---- Field Access tests ----\n"                  line 88  print "\n---- Field Access tests ----\n"  ;

1916 //224            : OP_CROWI=25                                                  line 89  $curRow    = FREE_ROW; [0:31] = 0; $3 = 2;
0006 //225            : $0 = 0x0                                                     line 89  
5F12 //226            : OP_REPEAT 32, adr++                                          line 89  
0266 //227            : $3 = 0x2                                                     line 89  

EE06 //228            : $0 = 0xEE                                                    line 90  [31]       = 0xEEEEEEEEEEEEEEEE; [2] = "The Key.";
EEEF //229            : OP_LDI $0 0x3BBB                                             line 90  
BBBB //230            : OP_LDI $0 0x2EEE                                             line 90  
EEEF //231            : OP_LDI $0 0x3BBB                                             line 90  
BBBB //232            : OP_LDI $0 0x2EEE                                             line 90  
1F0C //233            : OP_WRYT[31], $0                                              line 90  
2E06 //234            : $0 = 0x2E                                                    line 90  
7967 //235            : OP_LDI $0 0x1E59                                             line 90  
52CB //236            : OP_LDI $0 0x14B2                                             line 90  
0657 //237            : OP_LDI $0 0x0195                                             line 90  
A153 //238            : OP_LDI $0 0x2854                                             line 90  
020C //239            : OP_WRYT[2], $0                                               line 90  

1D1E //240            : OP_PRINT "Test field[$3].total:\n"                           line 99  TestField(total, 0x987654321F,   0x0,                0x1F3254769
B102 //241            : OP_XCHG $0,$5                                                line 99  
0006 //242            : $0 = 0x0                                                     line 99  
261F //243            : OP_LDI $0 0x0987                                             line 99  
6543 //244            : OP_LDI $0 0x1950                                             line 99  
C87F //245            : OP_LDI $0 0x321F                                             line 99  
B102 //246            : OP_XCHG $0,$5                                                line 99  
66B0 //247            : OP_WRF [$3].total = $5                                       line 99  
6688 //248            : OP_RDF $4 = [$3].total                                       line 99  
1E3E //249            : OP_EXPECT "$5\n"                                             line 99  
1F5E //250            : OP_ACTUAL "$4\n"                                             line 99  
0044 //251            : OP_READ $2,[0]                                               line 99  
203E //252            : OP_EXPECT "[0]=0x0\n"                                        line 99  
215E //253            : OP_ACTUAL "[0]=0x$2\n"                                       line 99  
0144 //254            : OP_READ $2,[1]                                               line 99  
223E //255            : OP_EXPECT "[1]=0x1F32547698\n"                               line 99  
235E //256            : OP_ACTUAL "[1]=0x$2\n"                                       line 99  
241E //257            : OP_PRINT "\n"                                                line 99  

251E //258            : OP_PRINT "Test field[$3].p1:\n"                              line 100  TestField(p1,    0x377777777700, 0x7777777700000000, 0x6E00001F3
B102 //259            : OP_XCHG $0,$5                                                line 100  
0D06 //260            : $0 = 0xD                                                     line 100  
DDDF //261            : OP_LDI $0 0x3777                                             line 100  
7777 //262            : OP_LDI $0 0x1DDD                                             line 100  
DC03 //263            : OP_LDI $0 0x3700                                             line 100  
B102 //264            : OP_XCHG $0,$5                                                line 100  
63B0 //265            : OP_WRF [$3].P1 = $5                                          line 100  
6388 //266            : OP_RDF $4 = [$3].P1                                          line 100  
1E3E //267            : OP_EXPECT "$5\n"                                             line 100  
1F5E //268            : OP_ACTUAL "$4\n"                                             line 100  
0044 //269            : OP_READ $2,[0]                                               line 100  
263E //270            : OP_EXPECT "[0]=0x7777777700000000\n"                         line 100  
215E //271            : OP_ACTUAL "[0]=0x$2\n"                                       line 100  
0144 //272            : OP_READ $2,[1]                                               line 100  
273E //273            : OP_EXPECT "[1]=0x6E00001F32547698\n"                         line 100  
235E //274            : OP_ACTUAL "[1]=0x$2\n"                                       line 100  
241E //275            : OP_PRINT "\n"                                                line 100  

281E //276            : OP_PRINT "Test field[$3].p2:\n"                              line 101  TestField(p2,    0x355555555500, 0x7777777755555555, 0x6FA8001F3
B102 //277            : OP_XCHG $0,$5                                                line 101  
0D06 //278            : $0 = 0xD                                                     line 101  
5557 //279            : OP_LDI $0 0x1555                                             line 101  
5557 //280            : OP_LDI $0 0x1555                                             line 101  
5403 //281            : OP_LDI $0 0x1500                                             line 101  
B102 //282            : OP_XCHG $0,$5                                                line 101  
64B0 //283            : OP_WRF [$3].P2 = $5                                          line 101  
6488 //284            : OP_RDF $4 = [$3].P2                                          line 101  
1E3E //285            : OP_EXPECT "$5\n"                                             line 101  
1F5E //286            : OP_ACTUAL "$4\n"                                             line 101  
0044 //287            : OP_READ $2,[0]                                               line 101  
293E //288            : OP_EXPECT "[0]=0x7777777755555555\n"                         line 101  
215E //289            : OP_ACTUAL "[0]=0x$2\n"                                       line 101  
0144 //290            : OP_READ $2,[1]                                               line 101  
2A3E //291            : OP_EXPECT "[1]=0x6FA8001F32547698\n"                         line 101  
235E //292            : OP_ACTUAL "[1]=0x$2\n"                                       line 101  
241E //293            : OP_PRINT "\n"                                                line 101  

2B1E //294            : OP_PRINT "Test field[$3].count:\n"                           line 102  TestField(count, 0x733,          0x7777777755555555, 0x6FAF331F3
B102 //295            : OP_XCHG $0,$5                                                line 102  
0006 //296            : $0 = 0x0                                                     line 102  
1CCF //297            : OP_LDI $0 0x0733                                             line 102  
B102 //298            : OP_XCHG $0,$5                                                line 102  
65B0 //299            : OP_WRF [$3].count = $5                                       line 102  
6588 //300            : OP_RDF $4 = [$3].count                                       line 102  
1E3E //301            : OP_EXPECT "$5\n"                                             line 102  
1F5E //302            : OP_ACTUAL "$4\n"                                             line 102  
0044 //303            : OP_READ $2,[0]                                               line 102  
293E //304            : OP_EXPECT "[0]=0x7777777755555555\n"                         line 102  
215E //305            : OP_ACTUAL "[0]=0x$2\n"                                       line 102  
0144 //306            : OP_READ $2,[1]                                               line 102  
2C3E //307            : OP_EXPECT "[1]=0x6FAF331F32547698\n"                         line 102  
235E //308            : OP_ACTUAL "[1]=0x$2\n"                                       line 102  
241E //309            : OP_PRINT "\n"                                                line 102  

2D1E //310            : OP_PRINT "Test field[$3].stop:\n"                            line 103  TestField(stop,  0x1,            0x7777777755555555, 0xEFAF331F3
01A6 //311            : $5 = 0x1                                                     line 103  
62B0 //312            : OP_WRF [$3].stop = $5                                        line 103  
6288 //313            : OP_RDF $4 = [$3].stop                                        line 103  
1E3E //314            : OP_EXPECT "$5\n"                                             line 103  
1F5E //315            : OP_ACTUAL "$4\n"                                             line 103  
0044 //316            : OP_READ $2,[0]                                               line 103  
293E //317            : OP_EXPECT "[0]=0x7777777755555555\n"                         line 103  
215E //318            : OP_ACTUAL "[0]=0x$2\n"                                       line 103  
0144 //319            : OP_READ $2,[1]                                               line 103  
2E3E //320            : OP_EXPECT "[1]=0xEFAF331F32547698\n"                         line 103  
235E //321            : OP_ACTUAL "[1]=0x$2\n"                                       line 103  
241E //322            : OP_PRINT "\n"                                                line 103  

241E //323            : OP_PRINT "\n"                                                line 104  printf "\n";

6018 //324            : $BUG_INDX                                                    line 105  $bug_indx;

2F1E //325            : OP_PRINT "---- Arithmetics ----\n"                           line 108  print "---- Arithmetics ----\n" ;

301E //326            : OP_PRINT "ADD 0x8000 + 0x8000 == 0x0 and carry\n"            line 109  print "ADD 0x8000 + 0x8000 == 0x0 and carry\n" ;

313E //327            : OP_EXPECT "0\n"                                              line 110  $expect "0"; $0 = 0x8000000000000000; $4 = $0; add $0, $4; $actu
8006 //328            : $0 = 0x80                                                    line 110  
0312 //329            : OP_REPEAT 4                                                  line 110  
0003 //330            : OP_LDI $0 0x0000                                             line 110  
1082 //331            : $4 = $0                                                      line 110  
0082 //332            : $0 = $0 ADD $4                                               line 110  
0F5E //333            : OP_ACTUAL "$0\n"                                             line 110  

321E //334            : OP_PRINT "ADC 0x0 + 0x8000+carry == 0x8001 and ~carry\n"     line 111  print "ADC 0x0 + 0x8000+carry == 0x8001 and ~carry\n" ;

333E //335            : OP_EXPECT "8000000000000001\n"                               line 112  $expect "8000000000000001";                    adc $0, $4; $actu
0182 //336            : $0 = $0 ADC $4                                               line 112  
0F5E //337            : OP_ACTUAL "$0\n"                                             line 112  

341E //338            : OP_PRINT "\nSHR 0x8001 == 0x4000 and carry\n"                line 114  print "\nSHR 0x8001 == 0x4000 and carry\n"  ;

353E //339            : OP_EXPECT "4000000000000000 and carry\n\n"                   line 115  $expect "4000000000000000 and carry\n" ;  SHR $0; if (c) {$actual
0D02 //340            : OP_SHR $0                                                    line 115  
0215 //341            : OP_GO_F(C)  @(344)                                           line 115  
365E //342            : OP_ACTUAL "$0 and carry\n"                                   line 115  
0101 //343            : OP_GO_T  @(345)                                              line 115  
375E //344 >          : OP_ACTUAL "\n"                                               line 115  

381E //345 >          : OP_PRINT "RCR 0x8001+carry == 0xA000 and carry\n"            line 116  print "RCR 0x8001+carry == 0xA000 and carry\n" ;

393E //346            : OP_EXPECT "A000000000000000 and ~carry\n"                    line 117  $expect "A000000000000000 and ~carry";   RCR $0; if(!c) {$actual
0F02 //347            : OP_RCR $0                                                    line 117  
0225 //348            : OP_GO_F(~C)  @(351)                                          line 117  
3A5E //349            : OP_ACTUAL "$0 and ~carry\n"                                  line 117  
0101 //350            : OP_GO_T  @(352)                                              line 117  
375E //351 >          : OP_ACTUAL "\n"                                               line 117  

3B1E //352 >          : OP_PRINT "\nSUB 0x8000 - 0x8000 == 0x0 and ~carry\n"         line 119  print "\nSUB 0x8000 - 0x8000 == 0x0 and ~carry\n"  ;

313E //353            : OP_EXPECT "0\n"                                              line 120  $expect "0";                $0 = 0x8000000000000000; $4 = $0; su
8006 //354            : $0 = 0x80                                                    line 120  
0312 //355            : OP_REPEAT 4                                                  line 120  
0003 //356            : OP_LDI $0 0x0000                                             line 120  
1082 //357            : $4 = $0                                                      line 120  
0282 //358            : $0 = $0 SUB $4                                               line 120  
0F5E //359            : OP_ACTUAL "$0\n"                                             line 120  

3C1E //360            : OP_PRINT "SBB 0x4000 - 0x8000 - carry == 0xBFFF and ~carry\n"   line 121  print "SBB 0x4000 - 0x8000 - carry == 0xBFFF and ~carry\n" ;

3D3E //361            : OP_EXPECT "BFFFFFFFFFFFFFFF and carry\n"                        line 122  $expect "BFFFFFFFFFFFFFFF and carry";   $0 = 0x8000000000000001;
8006 //362            : $0 = 0x80                                                       line 122  
0003 //363            : OP_LDI $0 0x0000                                                line 122  
0003 //364            : OP_LDI $0 0x0000                                                line 122  
0003 //365            : OP_LDI $0 0x0000                                                line 122  
0007 //366            : OP_LDI $0 0x0001                                                line 122  
0D02 //367            : OP_SHR $0                                                       line 122  
0382 //368            : $0 = $0 SBB $4                                                  line 122  

0215 //369            : OP_GO_F(C)  @(372)                                              line 123  if (c) $actual "$0 and carry"; else $actual "$0 and ~carry";
365E //370            : OP_ACTUAL "$0 and carry\n"                                      line 123  
0101 //371            : OP_GO_T  @(373)                                                 line 123  
3A5E //372 >          : OP_ACTUAL "$0 and ~carry\n"                                     line 123  

3E1E //373 >          : OP_PRINT "\nshift left = 0x7FFE ignoring carry\n"               line 125  print "\nshift left = 0x7FFE ignoring carry\n"  ;

3F3E //374            : OP_EXPECT "carry\n"                                             line 126  $expect "carry";    SHL $0; if (C) {$actual "carry";} else $actu
0C02 //375            : OP_SHL $0                                                       line 126  
0215 //376            : OP_GO_F(C)  @(379)                                              line 126  
405E //377            : OP_ACTUAL "carry\n"                                             line 126  
0101 //378            : OP_GO_T  @(380)                                                 line 126  
375E //379 >          : OP_ACTUAL "\n"                                                  line 126  

413E //380 >          : OP_EXPECT "non zero\n"                                          line 127  $expect "non zero";         if (Z) {$actual "zero"; } else $actu
0245 //381            : OP_GO_F(Z)  @(384)                                              line 127  
425E //382            : OP_ACTUAL "zero\n"                                              line 127  
0101 //383            : OP_GO_T  @(385)                                                 line 127  
435E //384 >          : OP_ACTUAL "non zero\n"                                          line 127  

441E //385 >          : OP_PRINT "\nrotate left ~C and 0x$0 == 0xfffffffffffffffd\n"    line 129  print "\nrotate left ~C and 0x$0 == 0xfffffffffffffffd\n"  ;

453E //386            : OP_EXPECT "fffffffffffffffd\n"                                  line 130  $expect "fffffffffffffffd"; RCL $0; if (C) $actual "$0 carry"; e
0E02 //387            : OP_RCL $0                                                       line 130  
0215 //388            : OP_GO_F(C)  @(391)                                              line 130  
465E //389            : OP_ACTUAL "$0 carry\n"                                          line 130  
0101 //390            : OP_GO_T  @(392)                                                 line 130  
0F5E //391 >          : OP_ACTUAL "$0\n"                                                line 130  

471E //392 >          : OP_PRINT "\npush registers, change them, pop registers; results should be the unchanged\n"   line 13print "\npush registers, change them, pop registers; results shou

0006 //393            : $0 = 0x0                                                                     line 133  $0 = 0x2468; $6 = 0x1357;
91A3 //394            : OP_LDI $0 0x2468                                                             line 133  
D102 //395            : OP_XCHG $0,$6                                                                line 133  
0006 //396            : $0 = 0x0                                                                     line 133  
4D5F //397            : OP_LDI $0 0x1357                                                             line 133  
D102 //398            : OP_XCHG $0,$6                                                                line 133  

1402 //399            : OP_PUSH $0                                                                   line 134  push $0,$6; $0 = 0x1234; $6 = 5678; pop $6,$0;
14C2 //400            : OP_PUSH $6                                                                   line 134  
0006 //401            : $0 = 0x0                                                                     line 134  
48D3 //402            : OP_LDI $0 0x1234                                                             line 134  
D102 //403            : OP_XCHG $0,$6                                                                line 134  
0006 //404            : $0 = 0x0                                                                     line 134  
58BB //405            : OP_LDI $0 0x162E                                                             line 134  
D102 //406            : OP_XCHG $0,$6                                                                line 134  
13C2 //407            : OP_POP $6                                                                    line 134  
1302 //408            : OP_POP $0                                                                    line 134  

483E //409            : OP_EXPECT "2468,1357\n"                                                      line 135  $expect "2468,1357"; xchg $0,$6; $actual "$6,$0";
D102 //410            : OP_XCHG $0,$6                                                                line 135  
495E //411            : OP_ACTUAL "$6,$0\n"                                                          line 135  

4A1E //412            : OP_PRINT "\nlogical OR\n"                                                    line 137  print "\nlogical OR\n"  ;

4B3E //413            : OP_EXPECT "FFFFFFFFFFFFFFFF\n"                                               line 138  $expect "FFFFFFFFFFFFFFFF"; $0 = 0x55555555AAAAAAAA; $6 = 0xAAAA
5506 //414            : $0 = 0x55                                                                    line 138  
5557 //415            : OP_LDI $0 0x1555                                                             line 138  
556B //416            : OP_LDI $0 0x155A                                                             line 138  
AAAB //417            : OP_LDI $0 0x2AAA                                                             line 138  
AAAB //418            : OP_LDI $0 0x2AAA                                                             line 138  
D102 //419            : OP_XCHG $0,$6                                                                line 138  
AA06 //420            : $0 = 0xAA                                                                    line 138  
AAAB //421            : OP_LDI $0 0x2AAA                                                             line 138  
AA97 //422            : OP_LDI $0 0x2AA5                                                             line 138  
5557 //423            : OP_LDI $0 0x1555                                                             line 138  
5557 //424            : OP_LDI $0 0x1555                                                             line 138  
D102 //425            : OP_XCHG $0,$6                                                                line 138  
06C2 //426            : $0 = $0 OR $6                                                                line 138  
0F5E //427            : OP_ACTUAL "$0\n"                                                             line 138  

4C1E //428            : OP_PRINT "\nlogical AND\n"                                                   line 139  print "\nlogical AND\n"  ;

313E //429            : OP_EXPECT "0\n"                                                              line 140  $expect "0";                $0 = 0x55555555AAAAAAAA;            
5506 //430            : $0 = 0x55                                                                    line 140  
5557 //431            : OP_LDI $0 0x1555                                                             line 140  
556B //432            : OP_LDI $0 0x155A                                                             line 140  
AAAB //433            : OP_LDI $0 0x2AAA                                                             line 140  
AAAB //434            : OP_LDI $0 0x2AAA                                                             line 140  
07C2 //435            : $0 = $0 AND $6                                                               line 140  
0F5E //436            : OP_ACTUAL "$0\n"                                                             line 140  

4D1E //437            : OP_PRINT "\nlogical XOR\n"                                                   line 141  print "\nlogical XOR\n"  ;

4E3E //438            : OP_EXPECT "FFFFFFFF\n"                                                       line 142  $expect "FFFFFFFF";         $0 = 0x55555555AAAAAAAA; $6 = 0x5555
5506 //439            : $0 = 0x55                                                                    line 142  
5557 //440            : OP_LDI $0 0x1555                                                             line 142  
556B //441            : OP_LDI $0 0x155A                                                             line 142  
AAAB //442            : OP_LDI $0 0x2AAA                                                             line 142  
AAAB //443            : OP_LDI $0 0x2AAA                                                             line 142  
D102 //444            : OP_XCHG $0,$6                                                                line 142  
5506 //445            : $0 = 0x55                                                                    line 142  
0312 //446            : OP_REPEAT 4                                                                  line 142  
5557 //447            : OP_LDI $0 0x1555                                                             line 142  
D102 //448            : OP_XCHG $0,$6                                                                line 142  
05C2 //449            : $0 = $0 XOR $6                                                               line 142  
0F5E //450            : OP_ACTUAL "$0\n"                                                             line 142  

4F1E //451            : OP_PRINT "\nweirdos: XTOS\n"                                                 line 144  printf "\nweirdos: XTOS\n"; $expect "12345678, 987654321";
503E //452            : OP_EXPECT "12345678, 987654321\n"                                            line 144  

0106 //453            : $0 = 0x1                                                                     line 145  $0 = 0x12345678; push $0; $1 = 0x987654321; XTOS $1; pop $0; $ac
2347 //454            : OP_LDI $0 0x08D1                                                             line 145  
59E3 //455            : OP_LDI $0 0x1678                                                             line 145  
1402 //456            : OP_PUSH $0                                                                   line 145  
3102 //457            : OP_XCHG $0,$1                                                                line 145  
9806 //458            : $0 = 0x98                                                                    line 145  
7657 //459            : OP_LDI $0 0x1D95                                                             line 145  
0C87 //460            : OP_LDI $0 0x0321                                                             line 145  
3102 //461            : OP_XCHG $0,$1                                                                line 145  
3202 //462            : OP_XTOS $1                                                                   line 145  
1302 //463            : OP_POP $0                                                                    line 145  
515E //464            : OP_ACTUAL "$1, $0\n"                                                         line 145  

1502 //465            : OP_PUSH $currow                                                              line 147  push $currow; pop $0;
1302 //466            : OP_POP $0                                                                    line 147  

6312 //467            : OP_REPEAT 4, adr--                                                           line 148  $4      = [10:7];

000A //468            : OP_RET                                                                       line 149  ret;
